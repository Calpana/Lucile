//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     GitVersion
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Lucile.Data.Metadata;

namespace Lucile.Data
{
    public abstract class EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
        {
            Entity = entity;
        }

        public IEntityMetadata Entity { get; }

        public abstract int KeyCount { get; }

        public abstract object GetValue(int index);

        public abstract void SetValue(int index, object value);

        public override int GetHashCode()
        {
            var result = Entity.GetHashCode();

            for (int i = 0; i < KeyCount; i++)
            {
                result = result ^ (GetValue(i)?.GetHashCode()).GetValueOrDefault();
            }

            return result;
        }

        public override bool Equals(object obj)
        {
            var typed = obj as EntityKey;
            if (typed == null)
            {
                return false;
            }

            if (typed.Entity.Equals(Entity))
            {
                if (typed.KeyCount == KeyCount)
                {
                    var areEqual = true;
                    for (int i = 0; i < KeyCount; i++)
                    {
                        areEqual = areEqual && object.Equals(typed.GetValue(i), GetValue(i));
                    }

                    return areEqual;
                }
            }

            return false;
        }

        public static Type Get(params Type[] types)
        {
            switch (types.Length)
            {
                case 1:
                    return typeof(EntityKey<>).MakeGenericType(types);
                case 2:
                    return typeof(EntityKey<,>).MakeGenericType(types);
                case 3:
                    return typeof(EntityKey<,,>).MakeGenericType(types);
                case 4:
                    return typeof(EntityKey<,,,>).MakeGenericType(types);
                case 5:
                    return typeof(EntityKey<,,,,>).MakeGenericType(types);
                case 6:
                    return typeof(EntityKey<,,,,,>).MakeGenericType(types);
                case 7:
                    return typeof(EntityKey<,,,,,,>).MakeGenericType(types);
                case 8:
                    return typeof(EntityKey<,,,,,,,>).MakeGenericType(types);
                case 9:
                    return typeof(EntityKey<,,,,,,,,>).MakeGenericType(types);
                case 10:
                    return typeof(EntityKey<,,,,,,,,,>).MakeGenericType(types);
                case 11:
                    return typeof(EntityKey<,,,,,,,,,,>).MakeGenericType(types);
                case 12:
                    return typeof(EntityKey<,,,,,,,,,,,>).MakeGenericType(types);
                case 13:
                    return typeof(EntityKey<,,,,,,,,,,,,>).MakeGenericType(types);
                case 14:
                    return typeof(EntityKey<,,,,,,,,,,,,,>).MakeGenericType(types);
                case 15:
                    return typeof(EntityKey<,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 16:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 17:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 18:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 19:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 20:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 21:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 22:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 23:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 24:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 25:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 26:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 27:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 28:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 29:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 30:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 31:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 32:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 33:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 34:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 35:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 36:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 37:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 38:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 39:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 40:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 41:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 42:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 43:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 44:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 45:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 46:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 47:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 48:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 49:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
            }

            throw new ArgumentOutOfRangeException("A Maximum of 50 primary Columns is supported.");
        }
    }

    public class EntityKey<TKey0> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 1;
            }
        }

        public TKey0 Value0 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 0)
            {
                return Value0;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }

        public override void SetValue(int index, object value)
        {
            if (index == 0)
            {
                Value0 = (TKey0)value;
                return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }
    public class EntityKey<TKey0, TKey1> : EntityKey<TKey0>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 2;
            }
        }

        public TKey1 Value1 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 1)
            {
                return Value1;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 1)
            {
                Value1 = (TKey1)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2> : EntityKey<TKey0, TKey1>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 3;
            }
        }

        public TKey2 Value2 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 2)
            {
                return Value2;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 2)
            {
                Value2 = (TKey2)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3> : EntityKey<TKey0, TKey1, TKey2>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 4;
            }
        }

        public TKey3 Value3 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 3)
            {
                return Value3;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 3)
            {
                Value3 = (TKey3)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4> : EntityKey<TKey0, TKey1, TKey2, TKey3>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 5;
            }
        }

        public TKey4 Value4 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 4)
            {
                return Value4;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 4)
            {
                Value4 = (TKey4)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 6;
            }
        }

        public TKey5 Value5 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 5)
            {
                return Value5;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 5)
            {
                Value5 = (TKey5)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 7;
            }
        }

        public TKey6 Value6 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 6)
            {
                return Value6;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 6)
            {
                Value6 = (TKey6)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 8;
            }
        }

        public TKey7 Value7 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 7)
            {
                return Value7;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 7)
            {
                Value7 = (TKey7)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 9;
            }
        }

        public TKey8 Value8 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 8)
            {
                return Value8;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 8)
            {
                Value8 = (TKey8)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 10;
            }
        }

        public TKey9 Value9 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 9)
            {
                return Value9;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 9)
            {
                Value9 = (TKey9)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 11;
            }
        }

        public TKey10 Value10 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 10)
            {
                return Value10;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 10)
            {
                Value10 = (TKey10)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 12;
            }
        }

        public TKey11 Value11 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 11)
            {
                return Value11;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 11)
            {
                Value11 = (TKey11)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 13;
            }
        }

        public TKey12 Value12 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 12)
            {
                return Value12;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 12)
            {
                Value12 = (TKey12)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 14;
            }
        }

        public TKey13 Value13 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 13)
            {
                return Value13;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 13)
            {
                Value13 = (TKey13)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 15;
            }
        }

        public TKey14 Value14 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 14)
            {
                return Value14;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 14)
            {
                Value14 = (TKey14)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 16;
            }
        }

        public TKey15 Value15 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 15)
            {
                return Value15;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 15)
            {
                Value15 = (TKey15)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 17;
            }
        }

        public TKey16 Value16 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 16)
            {
                return Value16;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 16)
            {
                Value16 = (TKey16)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 18;
            }
        }

        public TKey17 Value17 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 17)
            {
                return Value17;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 17)
            {
                Value17 = (TKey17)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 19;
            }
        }

        public TKey18 Value18 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 18)
            {
                return Value18;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 18)
            {
                Value18 = (TKey18)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 20;
            }
        }

        public TKey19 Value19 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 19)
            {
                return Value19;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 19)
            {
                Value19 = (TKey19)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 21;
            }
        }

        public TKey20 Value20 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 20)
            {
                return Value20;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 20)
            {
                Value20 = (TKey20)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 22;
            }
        }

        public TKey21 Value21 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 21)
            {
                return Value21;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 21)
            {
                Value21 = (TKey21)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 23;
            }
        }

        public TKey22 Value22 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 22)
            {
                return Value22;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 22)
            {
                Value22 = (TKey22)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 24;
            }
        }

        public TKey23 Value23 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 23)
            {
                return Value23;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 23)
            {
                Value23 = (TKey23)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 25;
            }
        }

        public TKey24 Value24 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 24)
            {
                return Value24;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 24)
            {
                Value24 = (TKey24)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 26;
            }
        }

        public TKey25 Value25 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 25)
            {
                return Value25;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 25)
            {
                Value25 = (TKey25)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 27;
            }
        }

        public TKey26 Value26 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 26)
            {
                return Value26;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 26)
            {
                Value26 = (TKey26)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 28;
            }
        }

        public TKey27 Value27 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 27)
            {
                return Value27;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 27)
            {
                Value27 = (TKey27)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 29;
            }
        }

        public TKey28 Value28 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 28)
            {
                return Value28;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 28)
            {
                Value28 = (TKey28)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 30;
            }
        }

        public TKey29 Value29 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 29)
            {
                return Value29;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 29)
            {
                Value29 = (TKey29)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 31;
            }
        }

        public TKey30 Value30 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 30)
            {
                return Value30;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 30)
            {
                Value30 = (TKey30)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 32;
            }
        }

        public TKey31 Value31 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 31)
            {
                return Value31;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 31)
            {
                Value31 = (TKey31)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 33;
            }
        }

        public TKey32 Value32 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 32)
            {
                return Value32;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 32)
            {
                Value32 = (TKey32)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 34;
            }
        }

        public TKey33 Value33 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 33)
            {
                return Value33;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 33)
            {
                Value33 = (TKey33)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 35;
            }
        }

        public TKey34 Value34 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 34)
            {
                return Value34;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 34)
            {
                Value34 = (TKey34)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 36;
            }
        }

        public TKey35 Value35 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 35)
            {
                return Value35;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 35)
            {
                Value35 = (TKey35)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 37;
            }
        }

        public TKey36 Value36 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 36)
            {
                return Value36;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 36)
            {
                Value36 = (TKey36)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 38;
            }
        }

        public TKey37 Value37 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 37)
            {
                return Value37;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 37)
            {
                Value37 = (TKey37)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 39;
            }
        }

        public TKey38 Value38 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 38)
            {
                return Value38;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 38)
            {
                Value38 = (TKey38)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 40;
            }
        }

        public TKey39 Value39 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 39)
            {
                return Value39;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 39)
            {
                Value39 = (TKey39)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 41;
            }
        }

        public TKey40 Value40 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 40)
            {
                return Value40;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 40)
            {
                Value40 = (TKey40)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 42;
            }
        }

        public TKey41 Value41 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 41)
            {
                return Value41;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 41)
            {
                Value41 = (TKey41)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 43;
            }
        }

        public TKey42 Value42 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 42)
            {
                return Value42;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 42)
            {
                Value42 = (TKey42)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 44;
            }
        }

        public TKey43 Value43 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 43)
            {
                return Value43;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 43)
            {
                Value43 = (TKey43)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 45;
            }
        }

        public TKey44 Value44 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 44)
            {
                return Value44;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 44)
            {
                Value44 = (TKey44)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 46;
            }
        }

        public TKey45 Value45 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 45)
            {
                return Value45;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 45)
            {
                Value45 = (TKey45)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45, TKey46> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 47;
            }
        }

        public TKey46 Value46 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 46)
            {
                return Value46;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 46)
            {
                Value46 = (TKey46)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45, TKey46, TKey47> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45, TKey46>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 48;
            }
        }

        public TKey47 Value47 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 47)
            {
                return Value47;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 47)
            {
                Value47 = (TKey47)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45, TKey46, TKey47, TKey48> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45, TKey46, TKey47>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 49;
            }
        }

        public TKey48 Value48 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 48)
            {
                return Value48;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 48)
            {
                Value48 = (TKey48)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45, TKey46, TKey47, TKey48, TKey49> : EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45, TKey46, TKey47, TKey48>
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 50;
            }
        }

        public TKey49 Value49 { get; set; }

        public override object GetValue(int index)
        {
            if (index == 49)
            {
                return Value49;
            }

            return base.GetValue(index);
        }

        public override void SetValue(int index, object value)
        {
            if (index == 49)
            {
                Value49 = (TKey49)value;
                return;
            }

            base.SetValue(index, value);
        }
    }
}